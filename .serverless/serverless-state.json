{
  "service": {
    "service": "AWSTallerDos",
    "serviceObject": {
      "name": "AWSTallerDos"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "profile": "capacitacionAws",
      "stackTags": {
        "Ambiente": "dev",
        "AreaResponsable": "DevelopStefanini",
        "Comentarios": " ",
        "Criticidad": "ALTA",
        "Disponibilidad": "7x24",
        "Nube": "AWS",
        "Plataforma": "Serverless Framework",
        "Proyecto": "AWSTallerDos",
        "Tecnologia": "Serverless",
        "UnidadNegocio": "FÃ¡brica de Sofware"
      },
      "region": "us-west-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "UserRegisterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-userRegister"
            }
          },
          "TopicsRegisterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-topicsRegister"
            }
          },
          "AssistanceRegisterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-assistanceRegister"
            }
          },
          "AuditoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-auditory"
            }
          },
          "WorkerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-worker"
            }
          },
          "GetTopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-getTopic"
            }
          },
          "GetParamsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-getParams"
            }
          },
          "AuthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/func-AWSTallerDos-dev-auth"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "AWSTallerDos",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-userRegister:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-topicsRegister:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-assistanceRegister:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-auditory:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-worker:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-getTopic:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-getParams:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-auth:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-userRegister:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-topicsRegister:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-assistanceRegister:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-auditory:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-worker:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-getTopic:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-getParams:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/func-AWSTallerDos-dev-auth:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuditoryQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "AWSTallerDos",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "UserRegisterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/userRegister.zip"
              },
              "Handler": "lambda/cross/userControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-userRegister",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUEUE_AUDITORY": "sqs-AWSTallerDos-dev-AuditoryQueue",
                  "TABLE_USER": "ddb-AWSTallerDos-dev-UserTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "userRegiterLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UserRegisterLogGroup",
              "userRegiterLambdaRole"
            ]
          },
          "TopicsRegisterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/topicsRegister.zip"
              },
              "Handler": "lambda/cross/topicsControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-topicsRegister",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUEUE_AUDITORY": "sqs-AWSTallerDos-dev-AuditoryQueue",
                  "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "topicsRegiterLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TopicsRegisterLogGroup",
              "topicsRegiterLambdaRole"
            ]
          },
          "AssistanceRegisterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/assistanceRegister.zip"
              },
              "Handler": "lambda/cross/assistanceControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-assistanceRegister",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "QUEUE_AUDITORY": "sqs-AWSTallerDos-dev-AuditoryQueue",
                  "TABLE_USER": "ddb-AWSTallerDos-dev-UserTable",
                  "TABLE_ASSISTANCE": "ddb-AWSTallerDos-dev-AssistanceTable",
                  "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "assistanceRegiterLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AssistanceRegisterLogGroup",
              "assistanceRegiterLambdaRole"
            ]
          },
          "AuditoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/auditory.zip"
              },
              "Handler": "lambda/cross/auditoryControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-auditory",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_AUDITORY": "ddb-AWSTallerDos-dev-AuditoryTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "auditoryLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuditoryLogGroup",
              "auditoryLambdaRole"
            ]
          },
          "WorkerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/worker.zip"
              },
              "Handler": "lambda/cross/workerControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-worker",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable",
                  "TABLE_AUDITORY": "ddb-AWSTallerDos-dev-AuditoryTable",
                  "REGION_DB": "us-west-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "workerLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WorkerLogGroup",
              "workerLambdaRole"
            ]
          },
          "GetTopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/getTopic.zip"
              },
              "Handler": "lambda/cross/getTopicsControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-getTopic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable",
                  "REGION_DB": "us-west-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "getTopicLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTopicLogGroup",
              "getTopicLambdaRole"
            ]
          },
          "GetParamsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/getParams.zip"
              },
              "Handler": "lambda/cross/getParamsControllerHandler.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-getParams",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_PARAMS": "ddb-AWSTallerDos-dev-ParamsTable",
                  "REGION_DB": "us-west-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "getParamsLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetParamsLogGroup",
              "getParamsLambdaRole"
            ]
          },
          "AuthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z/auth.zip"
              },
              "Handler": "lambda/authorizer/AuthHandler.auth",
              "Runtime": "nodejs12.x",
              "FunctionName": "func-AWSTallerDos-dev-auth",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthLogGroup"
            ]
          },
          "AuthLambdaVersionUVGIdJEI3N5RaJSPFseH1hv5O5nAu7DgcY1s8iHI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthLambdaFunction"
              },
              "CodeSha256": "AjjgvyKpvp8MqWtPQERcIFW711lZzvtubEwNYIAZGEY="
            }
          },
          "UserRegisterLambdaVersiongm0aYjEk8NmYJ1o0wOJv7MiKVsLzWHGJMNadAcbnNDE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserRegisterLambdaFunction"
              },
              "CodeSha256": "2aiZElmREP0ygWdnpYdnfZJZdQdxxksM1upESEhXEoc="
            }
          },
          "TopicsRegisterLambdaVersionBHeGHdpfIsneXCApTh84Lp0zWDWGhzHLW0q1FwRk8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TopicsRegisterLambdaFunction"
              },
              "CodeSha256": "OqZheQW4WW4W1W86K/xuiI9pFw0c69vzha1cOBZUWEc="
            }
          },
          "AssistanceRegisterLambdaVersionDv8fGb5OIY4fsGoC0KeKKoDZ3IXgIXsdL2sIN1XlA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AssistanceRegisterLambdaFunction"
              },
              "CodeSha256": "IJbuFU/zNzZwebbGQwwLgyKlHRI218Lztl4QthPWvDY="
            }
          },
          "AuditoryLambdaVersionZPbsV5Z2tgR4U9alCHwwbuovnJeOmOiKXAQja2kg83w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuditoryLambdaFunction"
              },
              "CodeSha256": "PQEhn3Ed3KAfgheCwYLuEJcT0ppfOX/jJ2GOQLTVE3s="
            }
          },
          "WorkerLambdaVersionJOVcvqaZD3nju5A1FRumXoM9oLg1CQmdImFbgpFqSWc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WorkerLambdaFunction"
              },
              "CodeSha256": "7xemQAFH9K83QSibn9mD955vDmiGw+s0hSmO2UpJzyE="
            }
          },
          "GetTopicLambdaVersionIuEJMQWqe5e97zwMpAuMgVb0996i775yRLwYY98": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTopicLambdaFunction"
              },
              "CodeSha256": "MWb7hWABJ/SIT6JFfb70VaLgh1QdCBsXRpsG2hWMuoM="
            }
          },
          "GetParamsLambdaVersion8IDZ264j7FQszEBDiUJZfjiAK2RbESi8GD6EaysdJA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetParamsLambdaFunction"
              },
              "CodeSha256": "x4DGopisBZJEZZoQ9Sz8ZUuy+w/NZmQKQaZJ/UzUJx0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-AWSTallerDos",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceAwstallerdos": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "AWSTallerDos",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDev": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdos"
              },
              "PathPart": "dev",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDevUserregister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdosDev"
              },
              "PathPart": "userRegister",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDevTopicsregister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdosDev"
              },
              "PathPart": "topicsRegister",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDevAssistanceregister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdosDev"
              },
              "PathPart": "assistanceRegister",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDevWorker": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdosDev"
              },
              "PathPart": "worker",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDevGettopic": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdosDev"
              },
              "PathPart": "getTopic",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAwstallerdosDevGetparams": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAwstallerdosDev"
              },
              "PathPart": "getParams",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevUserregisterOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevUserregister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevTopicsregisterOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevTopicsregister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevAssistanceregisterOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevAssistanceregister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevWorkerOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevWorker"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevGettopicOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevGettopic"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevGetparamsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevGetparams"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAwstallerdosDevUserregisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevUserregister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserRegisterLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UserRegisterLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAwstallerdosDevTopicsregisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevTopicsregister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "TopicsRegisterLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "TopicsRegisterLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAwstallerdosDevAssistanceregisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevAssistanceregister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AssistanceRegisterLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AssistanceRegisterLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAwstallerdosDevWorkerGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevWorker"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "WorkerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "WorkerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAwstallerdosDevGettopicGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevGettopic"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTopicLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAwstallerdosDevGetparamsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAwstallerdosDevGetparams"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetParamsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetParamsLambdaPermissionApiGateway"
            ]
          },
          "AuthApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "auth",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AuthLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1637190960283": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAwstallerdosDevUserregisterOptions",
              "ApiGatewayMethodAwstallerdosDevTopicsregisterOptions",
              "ApiGatewayMethodAwstallerdosDevAssistanceregisterOptions",
              "ApiGatewayMethodAwstallerdosDevWorkerOptions",
              "ApiGatewayMethodAwstallerdosDevGettopicOptions",
              "ApiGatewayMethodAwstallerdosDevGetparamsOptions",
              "ApiGatewayMethodAwstallerdosDevUserregisterPost",
              "ApiGatewayMethodAwstallerdosDevTopicsregisterPost",
              "ApiGatewayMethodAwstallerdosDevAssistanceregisterPost",
              "ApiGatewayMethodAwstallerdosDevWorkerGet",
              "ApiGatewayMethodAwstallerdosDevGettopicGet",
              "ApiGatewayMethodAwstallerdosDevGetparamsGet"
            ]
          },
          "UserRegisterLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserRegisterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "TopicsRegisterLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TopicsRegisterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AssistanceRegisterLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AssistanceRegisterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "WorkerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WorkerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetTopicLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetParamsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetParamsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuditoryEventSourceMappingSQSAuditoryQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "auditoryLambdaRole"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "AuditoryQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuditoryLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "userRegiterLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "send-message-sqs-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuditoryQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "PolicyName": "write-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetRecords",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "userTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-userLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-userLambdaRole"
                }
              ]
            }
          },
          "topicsRegiterLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "send-message-sqs-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuditoryQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "PolicyName": "write-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetRecords",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "topicsTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-topicsLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-topicsLambdaRole"
                }
              ]
            }
          },
          "assistanceRegiterLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "send-message-sqs-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuditoryQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "PolicyName": "write-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetRecords",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "assistanceTable",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "topicsTable",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "userTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-assistanceLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-assistanceLambdaRole"
                }
              ]
            }
          },
          "auditoryLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "read-message-sqs-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:DeleteMessage",
                          "sqs:ReceiveMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuditoryQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "PolicyName": "write-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "auditoryTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-auditoryLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-auditoryLambdaRole"
                }
              ]
            }
          },
          "workerLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "send-message-sqs-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuditoryQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "PolicyName": "write-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetRecords",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query",
                          "dynamodb:PartiQLSelect",
                          "dynamodb:UpdateItem"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "topicsTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-workerLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-workerLambdaRole"
                }
              ]
            }
          },
          "getTopicLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "read-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query",
                          "dynamodb:PartiQLSelect"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "topicsTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-getTopicLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-getTopicLambdaRole"
                }
              ]
            }
          },
          "getParamsLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Description": "Lambda Role",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ],
              "Path": "/",
              "Policies": [
                {
                  "PolicyName": "read-dynamodb-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query",
                          "dynamodb:PartiQLSelect"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "topicsTable",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "paramsTable",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "RoleName": "iam-AWSTallerDos-dev-getParamsLambdaRole",
              "Tags": [
                {
                  "Key": "Name",
                  "Value": "iam-AWSTallerDos-dev-getParamsLambdaRole"
                }
              ]
            }
          },
          "AuditoryQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "sqs-AWSTallerDos-dev-AuditoryQueue"
            }
          },
          "userTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ddb-AWSTallerDos-dev-UserTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "topicsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ddb-AWSTallerDos-dev-TopicsTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "assistanceTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ddb-AWSTallerDos-dev-AssistanceTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "auditoryTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ddb-AWSTallerDos-dev-AuditoryTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "paramsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ddb-AWSTallerDos-dev-ParamsTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "typeParam",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "typeParam",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-ServerlessDeploymentBucketName"
            }
          },
          "AuthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthLambdaVersionUVGIdJEI3N5RaJSPFseH1hv5O5nAu7DgcY1s8iHI"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-AuthLambdaFunctionQualifiedArn"
            }
          },
          "UserRegisterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserRegisterLambdaVersiongm0aYjEk8NmYJ1o0wOJv7MiKVsLzWHGJMNadAcbnNDE"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-UserRegisterLambdaFunctionQualifiedArn"
            }
          },
          "TopicsRegisterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TopicsRegisterLambdaVersionBHeGHdpfIsneXCApTh84Lp0zWDWGhzHLW0q1FwRk8"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-TopicsRegisterLambdaFunctionQualifiedArn"
            }
          },
          "AssistanceRegisterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AssistanceRegisterLambdaVersionDv8fGb5OIY4fsGoC0KeKKoDZ3IXgIXsdL2sIN1XlA"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-AssistanceRegisterLambdaFunctionQualifiedArn"
            }
          },
          "AuditoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuditoryLambdaVersionZPbsV5Z2tgR4U9alCHwwbuovnJeOmOiKXAQja2kg83w"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-AuditoryLambdaFunctionQualifiedArn"
            }
          },
          "WorkerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WorkerLambdaVersionJOVcvqaZD3nju5A1FRumXoM9oLg1CQmdImFbgpFqSWc"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-WorkerLambdaFunctionQualifiedArn"
            }
          },
          "GetTopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTopicLambdaVersionIuEJMQWqe5e97zwMpAuMgVb0996i775yRLwYY98"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-GetTopicLambdaFunctionQualifiedArn"
            }
          },
          "GetParamsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetParamsLambdaVersion8IDZ264j7FQszEBDiUJZfjiAK2RbESi8GD6EaysdJA"
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-GetParamsLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-AWSTallerDos-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "projectFullName": "AWSTallerDos",
      "stage": "dev",
      "project": "AWSTallerDos",
      "integrationBaseStackName": "awstraining-api-gateway-dev",
      "tableUser": "ddb-AWSTallerDos-dev-UserTable",
      "tableTopics": "ddb-AWSTallerDos-dev-TopicsTable",
      "tableAssistance": "ddb-AWSTallerDos-dev-AssistanceTable",
      "tableAuditory": "ddb-AWSTallerDos-dev-AuditoryTable",
      "tableParams": "ddb-AWSTallerDos-dev-ParamsTable",
      "queueAuditory": "sqs-AWSTallerDos-dev-AuditoryQueue",
      "basePath": "AWSTallerDos/dev"
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "userRegister": {
        "name": "func-AWSTallerDos-dev-userRegister",
        "handler": "lambda/cross/userControllerHandler.handler",
        "role": "userRegiterLambdaRole",
        "environment": {
          "QUEUE_AUDITORY": "sqs-AWSTallerDos-dev-AuditoryQueue",
          "TABLE_USER": "ddb-AWSTallerDos-dev-UserTable"
        },
        "events": [
          {
            "http": {
              "path": "AWSTallerDos/dev/userRegister",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\userRegister.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "UserRegisterLambdaVersiongm0aYjEk8NmYJ1o0wOJv7MiKVsLzWHGJMNadAcbnNDE"
      },
      "topicsRegister": {
        "name": "func-AWSTallerDos-dev-topicsRegister",
        "handler": "lambda/cross/topicsControllerHandler.handler",
        "role": "topicsRegiterLambdaRole",
        "environment": {
          "QUEUE_AUDITORY": "sqs-AWSTallerDos-dev-AuditoryQueue",
          "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable"
        },
        "events": [
          {
            "http": {
              "path": "AWSTallerDos/dev/topicsRegister",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\topicsRegister.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "TopicsRegisterLambdaVersionBHeGHdpfIsneXCApTh84Lp0zWDWGhzHLW0q1FwRk8"
      },
      "assistanceRegister": {
        "name": "func-AWSTallerDos-dev-assistanceRegister",
        "handler": "lambda/cross/assistanceControllerHandler.handler",
        "role": "assistanceRegiterLambdaRole",
        "environment": {
          "QUEUE_AUDITORY": "sqs-AWSTallerDos-dev-AuditoryQueue",
          "TABLE_USER": "ddb-AWSTallerDos-dev-UserTable",
          "TABLE_ASSISTANCE": "ddb-AWSTallerDos-dev-AssistanceTable",
          "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable"
        },
        "events": [
          {
            "http": {
              "path": "AWSTallerDos/dev/assistanceRegister",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\assistanceRegister.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AssistanceRegisterLambdaVersionDv8fGb5OIY4fsGoC0KeKKoDZ3IXgIXsdL2sIN1XlA"
      },
      "auditory": {
        "name": "func-AWSTallerDos-dev-auditory",
        "handler": "lambda/cross/auditoryControllerHandler.handler",
        "environment": {
          "TABLE_AUDITORY": "ddb-AWSTallerDos-dev-AuditoryTable"
        },
        "role": "auditoryLambdaRole",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2][\"Resource\"][0]"
              }
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\auditory.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AuditoryLambdaVersionZPbsV5Z2tgR4U9alCHwwbuovnJeOmOiKXAQja2kg83w"
      },
      "worker": {
        "name": "func-AWSTallerDos-dev-worker",
        "handler": "lambda/cross/workerControllerHandler.handler",
        "environment": {
          "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable",
          "TABLE_AUDITORY": "ddb-AWSTallerDos-dev-AuditoryTable",
          "REGION_DB": "us-west-1"
        },
        "role": "workerLambdaRole",
        "events": [
          {
            "http": {
              "path": "AWSTallerDos/dev/worker",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\worker.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "WorkerLambdaVersionJOVcvqaZD3nju5A1FRumXoM9oLg1CQmdImFbgpFqSWc"
      },
      "getTopic": {
        "name": "func-AWSTallerDos-dev-getTopic",
        "handler": "lambda/cross/getTopicsControllerHandler.handler",
        "environment": {
          "TABLE_TOPICS": "ddb-AWSTallerDos-dev-TopicsTable",
          "REGION_DB": "us-west-1"
        },
        "role": "getTopicLambdaRole",
        "events": [
          {
            "http": {
              "path": "AWSTallerDos/dev/getTopic",
              "method": "get",
              "authorizer": {
                "name": "auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\getTopic.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetTopicLambdaVersionIuEJMQWqe5e97zwMpAuMgVb0996i775yRLwYY98"
      },
      "getParams": {
        "name": "func-AWSTallerDos-dev-getParams",
        "handler": "lambda/cross/getParamsControllerHandler.handler",
        "environment": {
          "TABLE_PARAMS": "ddb-AWSTallerDos-dev-ParamsTable",
          "REGION_DB": "us-west-1"
        },
        "role": "getParamsLambdaRole",
        "events": [
          {
            "http": {
              "path": "AWSTallerDos/dev/getParams",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "artifact": ".serverless\\getParams.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetParamsLambdaVersion8IDZ264j7FQszEBDiUJZfjiAK2RbESi8GD6EaysdJA"
      },
      "auth": {
        "name": "func-AWSTallerDos-dev-auth",
        "handler": "lambda/authorizer/AuthHandler.auth",
        "events": [],
        "package": {
          "artifact": ".serverless\\auth.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AuthLambdaVersionUVGIdJEI3N5RaJSPFseH1hv5O5nAu7DgcY1s8iHI"
      }
    },
    "resources": {
      "Resources": {
        "userRegiterLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "send-message-sqs-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "AuditoryQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "PolicyName": "write-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetRecords",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "userTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-userLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-userLambdaRole"
              }
            ]
          }
        },
        "topicsRegiterLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "send-message-sqs-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "AuditoryQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "PolicyName": "write-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetRecords",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "topicsTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-topicsLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-topicsLambdaRole"
              }
            ]
          }
        },
        "assistanceRegiterLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "send-message-sqs-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "AuditoryQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "PolicyName": "write-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetRecords",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "assistanceTable",
                            "Arn"
                          ]
                        },
                        {
                          "Fn::GetAtt": [
                            "topicsTable",
                            "Arn"
                          ]
                        },
                        {
                          "Fn::GetAtt": [
                            "userTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-assistanceLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-assistanceLambdaRole"
              }
            ]
          }
        },
        "auditoryLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "read-message-sqs-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:DeleteMessage",
                        "sqs:ReceiveMessage",
                        "sqs:GetQueueAttributes"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "AuditoryQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "PolicyName": "write-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "auditoryTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-auditoryLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-auditoryLambdaRole"
              }
            ]
          }
        },
        "workerLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "send-message-sqs-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "AuditoryQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "PolicyName": "write-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetRecords",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query",
                        "dynamodb:PartiQLSelect",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "topicsTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-workerLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-workerLambdaRole"
              }
            ]
          }
        },
        "getTopicLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "read-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:GetRecords",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query",
                        "dynamodb:PartiQLSelect"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "topicsTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-getTopicLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-getTopicLambdaRole"
              }
            ]
          }
        },
        "getParamsLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Description": "Lambda Role",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
            ],
            "Path": "/",
            "Policies": [
              {
                "PolicyName": "read-dynamodb-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:GetRecords",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query",
                        "dynamodb:PartiQLSelect"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "topicsTable",
                            "Arn"
                          ]
                        },
                        {
                          "Fn::GetAtt": [
                            "paramsTable",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "RoleName": "iam-AWSTallerDos-dev-getParamsLambdaRole",
            "Tags": [
              {
                "Key": "Name",
                "Value": "iam-AWSTallerDos-dev-getParamsLambdaRole"
              }
            ]
          }
        },
        "AuditoryQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "sqs-AWSTallerDos-dev-AuditoryQueue"
          }
        },
        "userTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ddb-AWSTallerDos-dev-UserTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "topicsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ddb-AWSTallerDos-dev-TopicsTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "assistanceTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ddb-AWSTallerDos-dev-AssistanceTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "auditoryTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ddb-AWSTallerDos-dev-AuditoryTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "paramsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ddb-AWSTallerDos-dev-ParamsTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "typeParam",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "typeParam",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "artifactDirectoryName": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/AWSTallerDos/dev/1637190986634-2021-11-17T23:16:26.634Z",
    "artifact": ""
  }
}